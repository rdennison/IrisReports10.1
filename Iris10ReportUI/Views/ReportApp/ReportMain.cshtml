@*<img class="displayed" src="~/Content/Images/iris-logo-1437.jpg" height="130" width="400" alt="" />*@

@using Iris10ReportUI.GridBuilder.Extensions
@using IrisModels.Models
@using Kendo.Mvc.UI
@using SqlComponents
@using CoreDomain
@using IrisAttributes
@using Iris10ReportUI.Models

@{
    CoreService _coreService = new CoreService();
    ReportFilterDropdownAttribute filterDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute operatorDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute andorDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute groupOneDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute groupTwoDropdown = new ReportFilterDropdownAttribute();
    SelectList closeParentheses = groupTwoDropdown.GroupTwoDropdownList();
    SelectList openParentheses = groupOneDropdown.GroupOneDropdownList();
    SelectList ddandorList = andorDropdown.AndOrDropdownList();
    SelectList operatordropdownList = operatorDropdown.OperatorDropdownList("Dropdown");
    SelectList operatordateList = operatorDropdown.OperatorDropdownList("Date");
    SelectList operatortextList = operatorDropdown.OperatorDropdownList("Text");
    SelectList operatorTrueFalse = operatorDropdown.OperatorDropdownList("Dropdown2");
    SelectList descriptionList;

    List<string> formats = new List<string>();
    List<SqlWhere> wheres = new List<SqlWhere>();
    wheres.Add(new SqlWhere(null, null, "GridFilter", "CreatedByUser_Key", Session["CurrentUserKey"], null, SqlWhereComparison.SqlComparer.Equal, SqlWhereAndOrOptions.SqlWhereAndOr.And));

    formats.Add("MM/dd/yyyy");
    formats.Add("MM/dd/yy");

    IEnumerable<GridFilterModel> gridFilters = _coreService.LoadModel<GridFilterModel>(wheres, conName: Session["ConString"].ToString());

    if (Session["ModelType"] != null && (Session["ReportFilter"] == null || (bool) Session["ReportFilter"] != true))
    {
        descriptionList = filterDropdown.GetFilterDropdownList(Session["ModelType"].GetType());
    }
    else
    {
        descriptionList = filterDropdown.CreateReportFilterDropdownList();
    }
}

@(Html.Kendo().Splitter()
        .Name("vertical")

    .HtmlAttributes(new { style = "height: 765px" })
    .Orientation(SplitterOrientation.Vertical)
    .Panes(verticalPanes =>
    {



        verticalPanes.Add()
                .Size("75%")

                .HtmlAttributes(new { id = "report-grid" })
                .Collapsible(true)
                .LoadContentFrom("ReportMainUpper", "ReportMain");

        verticalPanes.Add()
      //.Collapsed(false)

      .Size("250px")
      //.CollapsedSize("1%")

      //.MinSize("20%")
      //.HtmlAttributes(new { style = "height: 800px" })
      .Resizable(true)
      .Collapsible(false)
     .Content("<div id = 'ReportLower'/>");
          


    })
)

<script>
    var REPORT_LIST = true;
    var REPORT_GRID = true;

</script>
