@*<img class="displayed" src="~/Content/Images/iris-logo-1437.jpg" height="130" width="400" alt="" />*@

@using Iris10ReportUI.GridBuilder.Extensions
@using IrisModels.Models
@using Kendo.Mvc.UI
@using SqlComponents
@using CoreDomain
@using IrisAttributes
@using Iris10ReportUI.Models

@{
    CoreService _coreService = new CoreService();
    ReportFilterDropdownAttribute filterDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute operatorDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute andorDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute groupOneDropdown = new ReportFilterDropdownAttribute();
    ReportFilterDropdownAttribute groupTwoDropdown = new ReportFilterDropdownAttribute();
    SelectList closeParentheses = groupTwoDropdown.GroupTwoDropdownList();
    SelectList openParentheses = groupOneDropdown.GroupOneDropdownList();
    SelectList ddandorList = andorDropdown.AndOrDropdownList();
    SelectList operatordropdownList = operatorDropdown.OperatorDropdownList("Dropdown");
    SelectList operatordateList = operatorDropdown.OperatorDropdownList("Date");
    SelectList operatortextList = operatorDropdown.OperatorDropdownList("Text");
    SelectList operatorTrueFalse = operatorDropdown.OperatorDropdownList("Dropdown2");
    SelectList descriptionList;

    List<string> formats = new List<string>();
    List<SqlWhere> wheres = new List<SqlWhere>();
    wheres.Add(new SqlWhere(null, null, "GridFilter", "CreatedByUser_Key", Session["CurrentUserKey"], null, SqlWhereComparison.SqlComparer.Equal, SqlWhereAndOrOptions.SqlWhereAndOr.And));

    formats.Add("MM/dd/yyyy");
    formats.Add("MM/dd/yy");

    IEnumerable<GridFilterModel> gridFilters = _coreService.LoadModel<GridFilterModel>(wheres, conName: Session["ConString"].ToString());

    if (Session["ModelType"] != null && (Session["ReportFilter"] == null || (bool) Session["ReportFilter"] != true))
    {
        descriptionList = filterDropdown.GetFilterDropdownList(Session["ModelType"].GetType());
    }
    else
    {
        descriptionList = filterDropdown.CreateReportFilterDropdownList();
    }
}







@(Html.Kendo().Splitter()
  .Name("vertical")
  .HtmlAttributes(new { style = "height: 765px" })
  .Orientation(SplitterOrientation.Vertical)
  .Panes(verticalPanes =>
  {



  verticalPanes.Add()
          //.Size("100%")
          .HtmlAttributes(new { id = "report-grid" })
          .Collapsible(false)
          .Content(@<div class="reportupper">

            @(Html.Kendo().ToolBar()
        .Name("ReportToolBar")
        .Items(items =>
        {

            items.Add().Template("<input id = 'reportsearch' class='k-textbox' placeholder='Search Report ' type='text' data-bind='events: { keyup: searchKeyPressed}' />").OverflowTemplate("<span></span>");

        })
            )


            <span style="height: 100%; width: 350px; overflow: auto; float: left; border-spacing:9px; margin-top: 20px">

                @(Html.Iris<RPTReportListByUserModel>().ReportListGrid())
                <script>
                    REPORT_LIST = true;
                </script>


            </span>

            <span style="height: 450px; width: 700px; overflow: auto; float: right; border-spacing:9px; margin-top: 20px">


                @(Html.Kendo()
     .TextBox()
     .Name("ReportPreview")
     .HtmlAttributes(new { style = "height: 300px; width: 600px" })
                )



                <h4>Kendo UI Button with icons</h4>




                @(Html.Kendo().Button()
        .Name("textButton")
        .HtmlAttributes(new { type = "button" })
        .Content("Button"))

                @(Html.Kendo().Button()
        .Name("textButton")
        .HtmlAttributes(new { type = "button" })
        .Content("Button"))

                @(Html.Kendo().Button()
        .Name("textButton")
        .HtmlAttributes(new { type = "button" })
        .Content("Button"))





            </span>
        </div>);

verticalPanes.Add()
//.Collapsed(false)

.Size("250px")
//.CollapsedSize("1%")

//.MinSize("20%")
//.HtmlAttributes(new { style = "height: 800px" })
.Resizable(true)
.Collapsible(false)
.Content(@<div class="reportlower">

            @(Html.Kendo().ToolBar()
        .Name("CriteriaToolBar")
        .Items(items =>
        {


            items.Add().Template("<input id = 'savedcritera' class='k-combobox' placeholder='Saved Criteria ' type='text' data-bind='events: { keyup: searchKeyPressed}' />").Overflow(ShowInOverflowPopup.Always);
            items.Add().Type(CommandType.Button).Text("Save");
            items.Add().Type(CommandType.Button).Text("Delete").Togglable(true);


        })
            )


            <span style="height: 100%; width: 100%; overflow: auto; border-spacing:9px;">

                @(Html.Kendo().Grid<GridFilterWhereModel>()
    .Name("ReportFilterCriteriaGrid")
    //.HtmlAttributes(new { style = "height: 300px; width: 600px" })
    .Columns(c =>
    {
        c.Select().Width(50).MinResizableWidth(50).HeaderHtmlAttributes(new { @id = "allchecked" });
        c.Bound(b => b.OpenGroup);
        c.Bound(b => b.ColumnName);
        c.Bound(b => b.ComparisonOperator);
        c.Bound(b => b.Value1);
        c.Bound(b => b.Value2);
        c.Bound(b => b.CloseGroup);
        c.Bound(b => b.AndOr);
        c.Bound(b => b.Position).Hidden();
        c.Bound(b => b.GridFilter_Key).Hidden();
    }).DataSource(s =>
    {
        s.Ajax().Read(read => read.Action("Read", "GridFilterWhere").Type(HttpVerbs.Get))
        .Destroy(destroy => destroy.Action("Destroy", "GridFilterWhere").Type(HttpVerbs.Post))
        .Update(update => update.Action("Update", "GridFilterWhere").Type(HttpVerbs.Post))
        .ServerOperation(false)
        .Batch(true)
        .Model(model =>
        {
            model.Id(p => p.GridFilterWhere_Key);
            model.Field(p => p.GridFilter_Key).Editable(false);
            model.Field(p => p.OpenGroup).Editable(false);
            model.Field(p => p.ColumnName).Editable(false);
            model.Field(p => p.ComparisonOperator).Editable(false);
            model.Field(p => p.Value1).Editable(false);
            model.Field(p => p.Value2).Editable(false);
            model.Field(p => p.CloseGroup).Editable(false);
            model.Field(p => p.AndOr).Editable(false);
            model.Field(p => p.Position).Editable(false);
        });
    }).Scrollable()
                )

                <h4>Kendo UI Button with icons</h4>




                @(Html.Kendo().Button()
        .Name("FinishFilter")
        .HtmlAttributes(new { @data_bind = "click: finishFilter" })
        .Content("Finish"))





            </span>
        </div>);


  })
)










<script>
    var LANDING_MENU = true;
</script>
